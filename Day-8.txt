# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
row=int(input())
col=int(input())
mat=[]
for i in range(row):
    a=[]
    for j in range(col):
        a.append(int(input("enter the number")))
    mat.append(a)
    print()
for i in range(row):
    for j in range(col):
        print(mat[i][j],end=" ")
    print()
print(mat)

//inversion

def inversion(a):
    count=0
    for i in range(len(a)):
        for j in range(i+1,len(a)):
            if a[i]>a[j]:
                count+=1
    return count
a=list(map(int,input("enter the numbers").split()))
print(inversion(a))

//matrix creation

row=int(input())
col=int(input())
mat=[]
for i in range(row):
    a=[]
    for j in range(col):
        a.append(int(input("enter the number")))
    mat.append(a)
    print()
for i in range(row):
    for j in range(col):
        print(mat[i][j],end=" ")
    print()
print(mat)

//merge inversion

def mergesort(arr):
    global c
    if len(arr)>1:
        mid=len(arr)//2
        left=arr[:mid]
        right=arr[mid:]
        mergesort(left)
        mergesort(right)
        i=j=k=0
        while i<len(left) and j<len(right):
            if left[i]<right[j]:
                arr[k]=left[i]
                i+=1
            else:
                arr[k]=right[j]
                c+=len(left)-i
                j+=1
            k+=1
        while i<len(left):
            arr[k]=left[i]
            i+=1
            k+=1
        while j<len(right):
            arr[k]=right[j]
            c+=len(left)-i
            j+=1
            k+=1
    return c
arr=list(map(int,input().split()))
c=0
print(mergesort(arr))

//quick sort

def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    
    return quick_sort(left) + middle + quick_sort(right)
my_list =list(map(int,input("enter the elements").split()))
sorted_list = quick_sort(my_list)
print(sorted_list)

//selection sort

a=list(map(int,input().split()))
for i in range(len(a)):
    min=i
    for j in range(i+1,len(a)):
        if a[j]<a[min]:
            min=j
    a[i],a[min]=a[min],a[i]
print(a)